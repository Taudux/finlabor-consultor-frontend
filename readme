
# finlabor-consultor-frontend

Aplicación de escritorio desarrollada con [Electron](https://www.electronjs.org/) para el análisis y consulta crediticia, con actualizaciones automáticas implementadas mediante `electron-builder` y `electron-updater`.

## 🚀 Características principales

- Aplicación multiplataforma con interfaz moderna
- Sistema de **actualizaciones automáticas** mediante [GitHub Releases](https://docs.github.com/es/repositories/releasing-projects-on-github/about-releases)
- Backend en FastAPI para procesamiento de archivos Excel
- Integración de scripts Python dentro del instalador
- Empaquetado y distribución con `electron-builder`
- Registro detallado de eventos mediante `electron-log`

## 🏗️ Instalación y ejecución local

1. Clona este repositorio:

   ```bash
   git clone https://github.com/Taudux/finlabor-consultor-frontend.git
   cd finlabor-consultor-frontend
   ```

2. Instala las dependencias:

   ```bash
   npm install
   ```

3. Ejecuta la aplicación en modo desarrollo:

   ```bash
   npm start
   ```

> 📝 Recuerda que en modo desarrollo no se ejecutan las actualizaciones automáticas.

## 🛠️ Generar instalador

Para compilar la aplicación y generar el instalador ejecutable:

```bash
npm run build
```

Esto creará los archivos necesarios dentro de la carpeta `/dist`, incluyendo:

- `Consultor de prueba-Setup-1.3.0.exe`
- `Consultor de prueba-Setup-1.3.0.exe.blockmap`
- `latest.yml`

⚠️ Asegúrate de cambiar la versión en `package.json` cada vez que publiques una nueva versión.

## 🔄 Actualizaciones automáticas

La app verifica actualizaciones automáticamente al iniciarse, y también puedes forzar la búsqueda manual desde la interfaz.

Para habilitar las actualizaciones automáticas, debes:

✅ Crear un **release en GitHub** subiendo los siguientes archivos de `/dist`:

- `Consultor de prueba-Setup-1.x.x.exe`
- `Consultor de prueba-Setup-1.x.x.exe.blockmap`
- `latest.yml`

La versión de `package.json` debe coincidir con la del tag del release.

## 📦 Configuración en `package.json`

La configuración de `electron-builder` se encuentra en la propiedad `build`:

```json
"build": {
  "appId": "com.tuempresa.miapp",
  "productName": "Consultor de reporte de credito",
  "publish": [
    {
      "provider": "github",
      "owner": "Taudux",
      "repo": "finlabor-consultor-frontend"
    }
  ],
  "extraFiles": [
    {
      "from": "python_scripts",
      "to": "python_scripts",
      "filter": ["**/*.py"]
    }
  ],
  "win": {
    "icon": "build/finlabor_logo-removebg-preview.ico",
    "target": "nsis",
    "artifactName": "${productName}-Setup-${version}.${ext}"
  }
}
```

## 📁 Estructura básica del proyecto

```
finlabor-consultor-frontend/
├── dist/                   # Archivos construidos para release
├── main.js                 # Proceso principal de Electron
├── preload.js              # Script preload
├── renderer.js             # Lógica del frontend
├── index.html              # Interfaz de la aplicación
├── python_scripts/         # Scripts Python incluidos
├── package.json            # Configuración del proyecto
└── README.md               # Este archivo
```

## 👤 Autor

**Yael Pérez**  
GitHub: [@YaelPerez](https://github.com/YaelPerez)

## 📢 Notas finales

- El repositorio debe ser **público** para que `electron-updater` funcione correctamente mediante GitHub Releases.
- Si requieres actualizaciones automáticas con repositorios privados, consulta la documentación de tokens de GitHub.

---

¡Gracias por usar Finlabor Consultor! 🚀
